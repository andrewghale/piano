{"version":3,"sources":["intervals.js","main.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["const note1 = document.getElementById(\"note1Field\")\nconst note2 = document.getElementById(\"note2Field\")\nconst note3 = document.getElementById(\"note3Field\")\nconst note4 = document.getElementById(\"note4Field\")\nconst result = document.getElementById(\"result\")\nconst button = document.getElementById(\"submitGuess\")\n\nconst chordTypes = [\n  {\n    \"code\": \"4.7\",\n    \"name\": \"\",\n  },\n  {\n    \"code\": \"5.7\",\n    \"name\": \"sus4\"\n  },\n  {\n    \"code\": \"2.7\",\n    \"name\": \"sus2\"\n  },\n  {\n    \"code\": \"1.7\",\n    \"name\": \"no3/5(♭9)\"\n  },\n  {\n    \"code\": \"6.7\",\n    \"name\": \"no3/5(#11)\"\n  },\n  {\n    \"code\": \"6.7.11\",\n    \"name\": \"no3/5/maj7(#11)\"\n  },\n  {\n    \"code\": \"7.10\",\n    \"name\": \"no3/5 7\"\n  },\n  {\n    \"code\": \"4.7.14\",\n    \"name\": \"(add9)\"\n  },\n  {\n    \"code\": \"4.7.9\",\n    \"name\": \"6\"\n  },\n  {\n    \"code\": \"4.7.11\",\n    \"name\": \"maj7\"\n  },\n  {\n    \"code\": \"5.7.11\",\n    \"name\": \"sus4/maj7\"\n  },\n  {\n    \"code\": \"7.11\",\n    \"name\": \"no3/5/maj7\"\n  },\n  {\n    \"code\": \"3.7\",\n    \"name\": \"m\"\n  },\n  {\n    \"code\": \"3.7.14\",\n    \"name\": \"m9\"\n  },\n  {\n    \"code\": \"3.7.9\",\n    \"name\": \"m6\"\n  },\n  {\n    \"code\": \"3.7.8\",\n    \"name\": \"mflat6\"\n  },\n  {\n    \"code\": \"3.7.10\",\n    \"name\": \"m7\"\n  },\n  {\n    \"code\": \"3.7.11\",\n    \"name\": \"m maj7\"\n  },\n  {\n    \"code\": \"3.6.10\",\n    \"name\": \"m7flat5\"\n  },\n  {\n    \"code\": \"4.7.10\",\n    \"name\": \"7\"\n  },\n  {\n    \"code\": \"2.7.9\",\n    \"name\": \"6sus2\"\n  },\n  {\n    \"code\": \"5.7.10\",\n    \"name\": \"7sus4\"\n  },\n  {\n    \"code\": \"4.8\",\n    \"name\": \"aug\"\n  },\n  {\n    \"code\": \"3.6\",\n    \"name\": \"dim\"\n  },\n  {\n    \"code\": \"3.6.9\",\n    \"name\": \"dim7\"\n  }\n]\n\nconst makeChordCode = (note1, note2, note3, note4) => {\n  let note1Index, note2Index, note3Index, note4Index\n  let chord = []\n  const notesArr = [\n    \"C\",\n    \"C#\",\n    \"D\",\n    \"D#\",\n    \"E\",\n    \"F\",\n    \"F#\",\n    \"G\",\n    \"G#\",\n    \"A\",\n    \"A#\",\n    \"B\",\n    \"C\",\n    \"C#\",\n    \"D\",\n    \"D#\",\n    \"E\",\n    \"F\",\n    \"F#\",\n    \"G\",\n    \"G#\",\n    \"A\",\n    \"A#\",\n    \"B\",\n    \"C\",\n    \"C#\",\n    \"D\",\n    \"D#\",\n    \"E\",\n    \"F\",\n    \"F#\",\n    \"G\",\n    \"G#\",\n    \"A\",\n    \"A#\",\n    \"B\"\n  ]\n  note1Index = notesArr.indexOf(note1);\n  note2Index = notesArr.indexOf(note2, note1Index)\n  note3Index = notesArr.indexOf(note3, note2Index)\n  note4Index = notesArr.indexOf(note4, note3Index)\n\n  chord.push(note2Index - note1Index, note3Index - note1Index)\n  if (note4Index !== -1) {\n  chord.push(note4Index\n     - note1Index\n  )}\n  return chord\n}\n\n// const makeNameSpan = (str) => {\n//   return `<span class=\"smaller\">${str}</span>`\n// }\n\nconst findChordTypes = (str) => {\n  let theResult = chordTypes.find((el) => el.code === str)\n  if (theResult == undefined) {\n    return \"(chord not added yet)\"\n  } else { return theResult.name }\n}\n\nconst convertToSharp = (str) => {\n  if (str === \"B♭\" || str === \"b♭\") {\n    str = \"A#\"\n  } else if (str === \"E♭\" || str === \"e♭\") {\n    str = \"D#\"\n  } else if (str === \"A♭\" || str === \"a♭\") {\n    str = \"G#\"\n  } else if (str === \"D♭\" || str === \"d♭\") {\n    str = \"C#\"\n  } else if (str === \"G♭\" || str === \"g♭\") {\n    str = \"F#\"\n  } else if (str === \"C♭\" || str === \"c♭\") {\n    str = \"B\"\n  } else if (str === \"F♭\" || str === \"f♭\") {\n    str = \"E\"\n  }\n  return str\n}\n\n//\n// Find chord quality\n//\nconst findChordQuality = (str) => {\n  if (str.includes(\"4\") === true) {\n    // any chord with a 4 in the code has a major third\n    console.log(\"major\")\n  return \"major\"\n  } else if (str.substring(0, 5).includes(\"3\")){\n    // if 3 is included in first 5 characters, it is a minor 3rd. substring is used as a 13 chord with no 3rd would return as minor\n    console.log(\"minor\")\n  return \"minor\"\n  }\n}\n\n// Major or minor Chord\nconst majMinOrSusTriad = (str) => {\n  if (str.includes(\".7\")) {\n    if (str.charAt(0) === \"2\") {\n        return (\"sus2\")\n    } else if (str.charAt(0) === \"3\") {\n        return (\"minor\")\n    } else if (str.charAt(0) === \"4\") {\n        return (\"major\")\n    } else if (str.charAt(0) === \"5\") {\n        return (\"sus4\")\n    } else {return (\"not valid chord\")}\n  } else if (str.includes(\".6\")) {\n    if (str.charAt(0) === \"3\") {\n      return (\"dim\")\n    } else if (str.charAt(0) === \"4\") {\n      return (\"major ♭5\")\n    } else {return (\"not valid chord\")}\n  } else if (str.includes(\".8\")) {\n    if (str.charAt(0) === \"4\") {\n      return (\"aug\")\n    } else {return (\"not valid chord\")}\n  }\n}\n\n// 5 Chord\nconst is5Chord = (str) => {\n  if (str === \"7\") {\n    return true\n  } else {\n    return false\n  }\n}\n\nbutton.addEventListener('click', function(e) {\n  e.preventDefault()\n  let chordResult = (makeChordCode(\n    convertToSharp(note1.value).toUpperCase(),\n    convertToSharp(note2.value).toUpperCase(),\n    convertToSharp(note3.value).toUpperCase(),\n    convertToSharp(note4.value).toUpperCase()))\n  chordResult = chordResult.join('.').toString()\n  console.log(`chord result is ${chordResult}`)\n  result.innerHTML = `${note1.value.toUpperCase()} ${findChordTypes(chordResult)}`\n})","let context = null;\nlet oscillator = null;\n\nconst getOrCreateContext = () => {\n  if (!context) {\n    context = new AudioContext();\n    oscillator = context.createOscillator();\n    oscillator.type = \"triangle\";\n    oscillator.connect(context.destination);\n  }\n  return context;\n};\n\nlet isStarted = false;\n\nconst noteOn = midiNote => {\n  getOrCreateContext();\n  const freq = Math.pow(2, (midiNote - 69) / 12) * 440;\n  oscillator.frequency.setTargetAtTime(freq, context.currentTime, 0);\n  if (!isStarted) {\n    oscillator.start(0);\n    isStarted = true;\n  } else {\n    context.resume();\n  }\n};\n\nconst noteOff = () => {\n  context.suspend();\n};\n\n// Below is keyboard emulation for C4-F5 a-' keys\nconst emulatedKeys = {\n  a: 60,\n  w: 61,\n  s: 62,\n  e: 63,\n  d: 64,\n  f: 65,\n  t: 66,\n  g: 67,\n  y: 68,\n  h: 69,\n  u: 70,\n  j: 71,\n  k: 72,\n  o: 73,\n  l: 74,\n  p: 75,\n  \";\": 76,\n  \"'\": 77\n};\n\ndocument.addEventListener(\"keydown\", e => {\n  const key = document.querySelector(`.key[data-key=\"${e.keyCode}\"]`);\n  // console.log(e);\n  if (emulatedKeys.hasOwnProperty(e.key)) {\n    noteOn(emulatedKeys[e.key]);\n    key.classList.add('playing');\n    setTimeout(() => {\n      key.classList.remove('playing');\n    }, 100);\n  }\n});\n\ndocument.addEventListener(\"keyup\", e => {\n  if (emulatedKeys.hasOwnProperty(e.key)) {\n    noteOff();\n  }\n});"]}